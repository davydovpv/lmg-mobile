type Lesson {
  id: ID
  name: String
  principles: [Principle]
}

type Mutation {
  updateScore(principleId: ID!, updatedAt: String): Score
}

type Principle {
  id: ID
  lessonId: ID
  name: String
  doctrineMarkdown: String
  teachingMarkdown: String
  pointsToTeachMarkdown: String
  videoRefs: [VideoRef]
  scriptureGroups: [ScriptureGroup]
  reflectPrompts: [String]
  enabled: Int
}

type Query {
  allLessons: [Lesson]
  lesson(id: ID!): Lesson
  allScores: [Score]
  score(principleId: ID!): Score
}

type Score {
  id: ID
  principleId: ID
  updatedAt: String
  value: Int
}

type Scripture {
  id: ID
  text: String
  link: String
}

type ScriptureGroup {
  id: ID
  title: String
  scriptures: [Scripture]
}

type VideoRef {
  id: ID
  title: String
  link: String
}

schema {
  query: Query
  mutation: Mutation
}
